package live.connector.vertxui.samples.figwheely;

import java.io.IOException;
import java.lang.invoke.MethodHandles;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;

import org.teavm.tooling.TeaVMToolException;

import io.vertx.core.AbstractVerticle;
import io.vertx.core.Vertx;
import io.vertx.core.http.HttpServer;
import io.vertx.core.http.HttpServerOptions;
import io.vertx.ext.web.Router;
import live.connector.vertxui.core.FigWheely;
import live.connector.vertxui.core.FigWheelyVertX;
import live.connector.vertxui.core.StaticHandlery;
import live.connector.vertxui.core.VertxUI;

public class Server extends AbstractVerticle {

	private final static Logger log = Logger.getLogger(MethodHandles.lookup().lookupClass().getName());

	public static void main(String[] args) {
		Vertx.vertx().deployVerticle(MethodHandles.lookup().lookupClass().getName());
	}

	@Override
	public void start() {
		Router router = Router.router(vertx);

		// Boot figwheely first, so that VertX'es don't get their first
		// java2javascript translation with debug=false. This single line
		// enables/disables FigWheely.
		FigWheelyVertX.buildDir = "target/test-classes";
		FigWheely.with(router);

		// Client with Figwheely support
		String clientUrl = "/client.js";
		// TODO let this client code be generated by vertxui too.
		router.route("/client").handler(requestHandler -> {
			requestHandler.response()
					.end("<!DOCTYPE html><html><head><link rel=stylesheet href='/sources/sample.css'?"
							+ System.currentTimeMillis() + ">" + "<script type=text/javascript src=" + clientUrl
							+ "></script></head><body><script>" + FigWheely.script
							+ "main()</script><div id='picture'/></body></html>");
		});
		try {
			// router.route("/figwheely.js").handler(new
			// VertxUI(FigWheelyJs.class, false));
			router.route(clientUrl).handler(new VertxUI(Client.class, false));

			router.route("/sources/*").handler(StaticHandlery.create("sources"));
		} catch (TeaVMToolException | IOException | IllegalArgumentException e) {
			// Error on first-time java-2-javascript translation: stop deploying
			log.log(Level.SEVERE, "Startup error", e);
			System.exit(0); // stop on startup error
		}
		HttpServerOptions serverOptions = new HttpServerOptions().setCompressionSupported(true);
		HttpServer server = vertx.createHttpServer(serverOptions).requestHandler(router::accept).listen(80,
				listenHandler -> {
					if (listenHandler.failed()) {
						log.log(Level.SEVERE, "Startup error", listenHandler.cause());
						System.exit(0); // stop on startup error
					}
				});
		log.info("Initialised:" + router.getRoutes().stream().map(a -> {
			return "\n\thttp://localhost:" + server.actualPort() + a.getPath();
		}).collect(Collectors.joining()));
	}

}